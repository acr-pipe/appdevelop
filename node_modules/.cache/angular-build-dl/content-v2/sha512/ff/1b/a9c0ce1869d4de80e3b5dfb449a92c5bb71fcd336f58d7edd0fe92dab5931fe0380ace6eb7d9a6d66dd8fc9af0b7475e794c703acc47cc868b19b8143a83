(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["common"],{

/***/ "./node_modules/@ionic/core/dist/esm/framework-delegate-d1eb6504.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@ionic/core/dist/esm/framework-delegate-d1eb6504.js ***!
  \**************************************************************************/
/*! exports provided: a, d */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return attachComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return detachComponent; });
const attachComponent = async (delegate, container, component, cssClasses, componentProps) => {
    if (delegate) {
        return delegate.attachViewToDom(container, component, componentProps, cssClasses);
    }
    if (typeof component !== 'string' && !(component instanceof HTMLElement)) {
        throw new Error('framework delegate is missing');
    }
    const el = (typeof component === 'string')
        ? container.ownerDocument && container.ownerDocument.createElement(component)
        : component;
    if (cssClasses) {
        cssClasses.forEach(c => el.classList.add(c));
    }
    if (componentProps) {
        Object.assign(el, componentProps);
    }
    container.appendChild(el);
    if (el.componentOnReady) {
        await el.componentOnReady();
    }
    return el;
};
const detachComponent = (delegate, element) => {
    if (element) {
        if (delegate) {
            const container = element.parentElement;
            return delegate.removeViewFromDom(container, element);
        }
        element.remove();
    }
    return Promise.resolve();
};




/***/ }),

/***/ "./node_modules/@ionic/core/dist/esm/haptic-ccbda579.js":
/*!**************************************************************!*\
  !*** ./node_modules/@ionic/core/dist/esm/haptic-ccbda579.js ***!
  \**************************************************************/
/*! exports provided: a, b, c, h */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return hapticSelectionStart; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return hapticSelectionChanged; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return hapticSelectionEnd; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "h", function() { return hapticSelection; });
/**
 * Check to see if the Haptic Plugin is available
 * @return Returns `true` or false if the plugin is available
 */
/**
 * Trigger a selection changed haptic event. Good for one-time events
 * (not for gestures)
 */
const hapticSelection = () => {
    const engine = window.TapticEngine;
    if (engine) {
        engine.selection();
    }
};
/**
 * Tell the haptic engine that a gesture for a selection change is starting.
 */
const hapticSelectionStart = () => {
    const engine = window.TapticEngine;
    if (engine) {
        engine.gestureSelectionStart();
    }
};
/**
 * Tell the haptic engine that a selection changed during a gesture.
 */
const hapticSelectionChanged = () => {
    const engine = window.TapticEngine;
    if (engine) {
        engine.gestureSelectionChanged();
    }
};
/**
 * Tell the haptic engine we are done with a gesture. This needs to be
 * called lest resources are not properly recycled.
 */
const hapticSelectionEnd = () => {
    const engine = window.TapticEngine;
    if (engine) {
        engine.gestureSelectionEnd();
    }
};




/***/ }),

/***/ "./node_modules/@ionic/core/dist/esm/index-729ec402.js":
/*!*************************************************************!*\
  !*** ./node_modules/@ionic/core/dist/esm/index-729ec402.js ***!
  \*************************************************************/
/*! exports provided: s */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "s", function() { return sanitizeDOMString; });
/**
 * Does a simple sanitization of all elements
 * in an untrusted string
 */
const sanitizeDOMString = (untrustedString) => {
    try {
        if (typeof untrustedString !== 'string' || untrustedString === '') {
            return untrustedString;
        }
        /**
         * Create a document fragment
         * separate from the main DOM,
         * create a div to do our work in
         */
        const documentFragment = document.createDocumentFragment();
        const workingDiv = document.createElement('div');
        documentFragment.appendChild(workingDiv);
        workingDiv.innerHTML = untrustedString;
        /**
         * Remove any elements
         * that are blocked
         */
        blockedTags.forEach(blockedTag => {
            const getElementsToRemove = documentFragment.querySelectorAll(blockedTag);
            for (let elementIndex = getElementsToRemove.length - 1; elementIndex >= 0; elementIndex--) {
                const element = getElementsToRemove[elementIndex];
                if (element.parentNode) {
                    element.parentNode.removeChild(element);
                }
                else {
                    documentFragment.removeChild(element);
                }
                /**
                 * We still need to sanitize
                 * the children of this element
                 * as they are left behind
                 */
                const childElements = getElementChildren(element);
                /* tslint:disable-next-line */
                for (let childIndex = 0; childIndex < childElements.length; childIndex++) {
                    sanitizeElement(childElements[childIndex]);
                }
            }
        });
        /**
         * Go through remaining elements and remove
         * non-allowed attribs
         */
        // IE does not support .children on document fragments, only .childNodes
        const dfChildren = getElementChildren(documentFragment);
        /* tslint:disable-next-line */
        for (let childIndex = 0; childIndex < dfChildren.length; childIndex++) {
            sanitizeElement(dfChildren[childIndex]);
        }
        // Append document fragment to div
        const fragmentDiv = document.createElement('div');
        fragmentDiv.appendChild(documentFragment);
        // First child is always the div we did our work in
        const getInnerDiv = fragmentDiv.querySelector('div');
        return (getInnerDiv !== null) ? getInnerDiv.innerHTML : fragmentDiv.innerHTML;
    }
    catch (err) {
        console.error(err);
        return '';
    }
};
/**
 * Clean up current element based on allowed attributes
 * and then recursively dig down into any child elements to
 * clean those up as well
 */
const sanitizeElement = (element) => {
    // IE uses childNodes, so ignore nodes that are not elements
    if (element.nodeType && element.nodeType !== 1) {
        return;
    }
    for (let i = element.attributes.length - 1; i >= 0; i--) {
        const attribute = element.attributes.item(i);
        const attributeName = attribute.name;
        // remove non-allowed attribs
        if (!allowedAttributes.includes(attributeName.toLowerCase())) {
            element.removeAttribute(attributeName);
            continue;
        }
        // clean up any allowed attribs
        // that attempt to do any JS funny-business
        const attributeValue = attribute.value;
        /* tslint:disable-next-line */
        if (attributeValue != null && attributeValue.toLowerCase().includes('javascript:')) {
            element.removeAttribute(attributeName);
        }
    }
    /**
     * Sanitize any nested children
     */
    const childElements = getElementChildren(element);
    /* tslint:disable-next-line */
    for (let i = 0; i < childElements.length; i++) {
        sanitizeElement(childElements[i]);
    }
};
/**
 * IE doesn't always support .children
 * so we revert to .childNodes instead
 */
const getElementChildren = (el) => {
    return (el.children != null) ? el.children : el.childNodes;
};
const allowedAttributes = ['class', 'id', 'href', 'src', 'name', 'slot'];
const blockedTags = ['script', 'style', 'iframe', 'meta', 'link', 'object', 'embed'];




/***/ }),

/***/ "./node_modules/@ionic/core/dist/esm/spinner-configs-c78e170e.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@ionic/core/dist/esm/spinner-configs-c78e170e.js ***!
  \***********************************************************************/
/*! exports provided: S */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "S", function() { return SPINNERS; });
const spinners = {
    'bubbles': {
        dur: 1000,
        circles: 9,
        fn: (dur, index, total) => {
            const animationDelay = `${(dur * index / total) - dur}ms`;
            const angle = 2 * Math.PI * index / total;
            return {
                r: 5,
                style: {
                    'top': `${9 * Math.sin(angle)}px`,
                    'left': `${9 * Math.cos(angle)}px`,
                    'animation-delay': animationDelay,
                }
            };
        }
    },
    'circles': {
        dur: 1000,
        circles: 8,
        fn: (dur, index, total) => {
            const step = index / total;
            const animationDelay = `${(dur * step) - dur}ms`;
            const angle = 2 * Math.PI * step;
            return {
                r: 5,
                style: {
                    'top': `${9 * Math.sin(angle)}px`,
                    'left': `${9 * Math.cos(angle)}px`,
                    'animation-delay': animationDelay,
                }
            };
        }
    },
    'circular': {
        dur: 1400,
        elmDuration: true,
        circles: 1,
        fn: () => {
            return {
                r: 20,
                cx: 48,
                cy: 48,
                fill: 'none',
                viewBox: '24 24 48 48',
                transform: 'translate(0,0)',
                style: {}
            };
        }
    },
    'crescent': {
        dur: 750,
        circles: 1,
        fn: () => {
            return {
                r: 26,
                style: {}
            };
        }
    },
    'dots': {
        dur: 750,
        circles: 3,
        fn: (_, index) => {
            const animationDelay = -(110 * index) + 'ms';
            return {
                r: 6,
                style: {
                    'left': `${9 - (9 * index)}px`,
                    'animation-delay': animationDelay,
                }
            };
        }
    },
    'lines': {
        dur: 1000,
        lines: 12,
        fn: (dur, index, total) => {
            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;
            const animationDelay = `${(dur * index / total) - dur}ms`;
            return {
                y1: 17,
                y2: 29,
                style: {
                    'transform': transform,
                    'animation-delay': animationDelay,
                }
            };
        }
    },
    'lines-small': {
        dur: 1000,
        lines: 12,
        fn: (dur, index, total) => {
            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;
            const animationDelay = `${(dur * index / total) - dur}ms`;
            return {
                y1: 12,
                y2: 20,
                style: {
                    'transform': transform,
                    'animation-delay': animationDelay,
                }
            };
        }
    }
};
const SPINNERS = spinners;




/***/ }),

/***/ "./node_modules/@ionic/core/dist/esm/theme-c2dc54d9.js":
/*!*************************************************************!*\
  !*** ./node_modules/@ionic/core/dist/esm/theme-c2dc54d9.js ***!
  \*************************************************************/
/*! exports provided: c, g, h, o */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return createColorClasses; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return getClassMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "h", function() { return hostContext; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "o", function() { return openURL; });
const hostContext = (selector, el) => {
    return el.closest(selector) !== null;
};
/**
 * Create the mode and color classes for the component based on the classes passed in
 */
const createColorClasses = (color) => {
    return (typeof color === 'string' && color.length > 0) ? {
        'ion-color': true,
        [`ion-color-${color}`]: true
    } : undefined;
};
const getClassList = (classes) => {
    if (classes !== undefined) {
        const array = Array.isArray(classes) ? classes : classes.split(' ');
        return array
            .filter(c => c != null)
            .map(c => c.trim())
            .filter(c => c !== '');
    }
    return [];
};
const getClassMap = (classes) => {
    const map = {};
    getClassList(classes).forEach(c => map[c] = true);
    return map;
};
const SCHEME = /^[a-z][a-z0-9+\-.]*:/;
const openURL = async (url, ev, direction) => {
    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {
        const router = document.querySelector('ion-router');
        if (router) {
            if (ev != null) {
                ev.preventDefault();
            }
            return router.push(url, direction);
        }
    }
    return false;
};




/***/ }),

/***/ "./src/app/services/auth.service.ts":
/*!******************************************!*\
  !*** ./src/app/services/auth.service.ts ***!
  \******************************************/
/*! exports provided: AuthService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AuthService", function() { return AuthService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_fire_auth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/fire/auth */ "./node_modules/@angular/fire/auth/es2015/index.js");
/* harmony import */ var firebase__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! firebase */ "./node_modules/firebase/dist/index.cjs.js");
/* harmony import */ var firebase__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(firebase__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _ionic_native_facebook_ngx__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ionic-native/facebook/ngx */ "./node_modules/@ionic-native/facebook/ngx/index.js");





let AuthService = class AuthService {
    constructor(afAuth, fb) {
        this.afAuth = afAuth;
        this.fb = fb;
    }
    // Registro con correo
    signUpWithEmail(email, pass) {
        return this.afAuth.auth.createUserWithEmailAndPassword(email, pass);
    }
    // Ingreso con email
    signInWithEmail(email, pass) {
        return this.afAuth.auth.signInWithEmailAndPassword(email, pass);
    }
    // Ingreso con Google
    signInWithGoogle() {
        const provider = new firebase__WEBPACK_IMPORTED_MODULE_3__["auth"].GoogleAuthProvider();
        provider.addScope('https://www.googleapis.com/auth/contacts.readonly');
        return this.afAuth.auth.signInWithPopup(new firebase__WEBPACK_IMPORTED_MODULE_3__["auth"].GoogleAuthProvider());
    }
    // Ingreso con Facebook web
    signInWithFacebookWeb() {
        console.log('auth facebook');
        // const provider: firebase.auth.FacebookAuthProvider = new firebase.auth.FacebookAuthProvider();
        return this.afAuth.auth.signInWithPopup(new firebase__WEBPACK_IMPORTED_MODULE_3__["auth"].FacebookAuthProvider());
    }
    // Ingreso con Facebook app
    signInWithFacebookApp() {
        return this.fb.login(['public_profile', 'email']);
    }
    // Finalizar sesión
    signOut() {
        return this.afAuth.auth.signOut();
    }
};
AuthService.ctorParameters = () => [
    { type: _angular_fire_auth__WEBPACK_IMPORTED_MODULE_2__["AngularFireAuth"] },
    { type: _ionic_native_facebook_ngx__WEBPACK_IMPORTED_MODULE_4__["Facebook"] }
];
AuthService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
        providedIn: 'root'
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_fire_auth__WEBPACK_IMPORTED_MODULE_2__["AngularFireAuth"], _ionic_native_facebook_ngx__WEBPACK_IMPORTED_MODULE_4__["Facebook"]])
], AuthService);



/***/ }),

/***/ "./src/app/services/ftpayment.service.ts":
/*!***********************************************!*\
  !*** ./src/app/services/ftpayment.service.ts ***!
  \***********************************************/
/*! exports provided: FtpaymentService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FtpaymentService", function() { return FtpaymentService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm2015/http.js");
/* harmony import */ var _crud_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./crud.service */ "./src/app/services/crud.service.ts");




let FtpaymentService = class FtpaymentService {
    constructor(http, crud) {
        this.http = http;
        this.crud = crud;
    }
    /* User Profile Management Options */
    createUser(appname, user, firstname, lastname, pass, email, phone) {
        return this.http.post('http://www.fttserver.com:4217/api/createUser', { applicationName: appname,
            userName: user,
            userFirstName: firstname,
            userLastName: lastname,
            userPassword: pass,
            userEmail: email,
            userCallerId: phone });
    }
    logOnUser(appname, user, pass) {
        console.log('appname');
        return this.http.post(`http://www.fttserver.com:4217/api/logOnUser`, { applicationName: appname, userName: user, userPassword: pass });
    }
    userDeleteProfile(appname, user, pass, email) {
        return this.http.post(`http://www.fttserver.com:4217/api/UserDeleteProfile`, { applicationName: appname, userName: user, userPassword: pass, userEmail: email });
    }
    userChangePassword(appname, user, pass, newpass) {
        return this.http.post(`http://www.fttserver.com:4217/api/userChangePassword`, { applicationName: appname, userName: user, userPassword: pass, userPasswordNew: newpass });
    }
    /* Cards Management */
    userIncludeCard(appname, user, pass, name, cardNumber, expMonth, expYear, cvv) {
        return this.http.post('http://www.fttserver.com:4217/api/UserIncludeCard', { applicationName: appname,
            userName: user,
            userPassword: pass,
            cardDescription: name,
            primaryAccountNumber: cardNumber,
            expirationMonth: expMonth,
            expirationYear: expYear,
            verificationValue: cvv });
    }
    userUpdateCard(appname, user, pass, tokenId, cardNumber, expMonth, expYear, cvv) {
        return this.http.post(`http://www.fttserver.com:4217/api/UserUpdateCard`, { applicationName: appname,
            userName: user,
            userPassword: pass,
            cardTokenId: tokenId,
            cardDescription: name,
            primaryAccountNumber: cardNumber,
            expirationMonth: expMonth,
            expirationYear: expYear,
            verificationValue: cvv });
    }
    userDeleteCard(appname, user, pass, tokenId) {
        return this.http.post(`http://www.fttserver.com:4217/api/UserDeleteCard`, { applicationName: appname,
            userName: user,
            userPassword: pass,
            cardTokenId: tokenId });
    }
    userRequestDefaultCard(appname, user, pass) {
        return this.http.post(`http://www.fttserver.com:4217/api/UserRequestDefaultCard`, { applicationName: appname, userName: user, userPassword: pass });
    }
    userRequestCards(appname, user, pass) {
        return this.http.post(`http://www.fttserver.com:4217/api/UserRequestCards`, { applicationName: appname, userName: user, userPassword: pass });
    }
    userSetDefaultCard(appname, user, tokenId) {
        return this.http.post(`http://www.fttserver.com:4217/api/UserSetDefaultCard`, { applicationName: appname, userName: user, cardTokenId: tokenId });
    }
    /* Payment Management By Users */
    userRequestCharges(appname, user, pass) {
        return this.http.post(`http://www.fttserver.com:4217/api/UserRequestCharges`, { applicationName: appname, userName: user, userPassword: pass });
    }
    userViewCharge(appname, user, pass, tokenId) {
        return this.http.post(`http://www.fttserver.com:4217/api/UserViewCharge`, { applicationName: appname, userName: user, userPassword: pass, chargeTokenId: tokenId });
    }
    userApplyCharge(appname, user, pass, chargeId, tokenId) {
        return this.http.post(`http://www.fttserver.com:4217/api/UserApplyCharge`, { applicationName: appname, userName: user, userPassword: pass, chargeTokenId: chargeId, cardTokenId: tokenId });
    }
    /* Payment Management By Commerce */
    logOnApp(appname, apppass) {
        return this.http.post(`http://www.fttserver.com:4217/api/LogOnApp`, { applicationName: appname, applicationPassword: apppass });
    }
    appIncludeCharge(appname, apppass, user, descr, curr, amount) {
        return this.http.post('http://www.fttserver.com:4217/api/AppIncludeCharge', { applicationName: appname,
            applicationPassword: apppass,
            chargeDescription: descr,
            userName: user,
            transactionCurrency: curr,
            transactionAmount: amount });
    }
    appApplyCharge(appname, apppass, user, chargeId, tokenId) {
        return this.http.post('http://www.fttserver.com:4217/api/AppApplyCharge', { applicationName: appname,
            applicationPassword: apppass,
            userName: user,
            chargeTokenId: chargeId,
            cardTokenId: tokenId });
    }
    appVerifyUserData(appname, apppass, user) {
        return this.http.post(`http://www.fttserver.com:4217/api/AppVerifyUserData`, { applicationName: appname, applicationPassword: apppass, userName: user });
    }
    appVerifyUserDefaultCard(appname, apppass, user) {
        return this.http.post(`http://www.fttserver.com:4217/api/AppVerifyUserDefaultCard`, { applicationName: appname, applicationPassword: apppass, userName: user });
    }
    appVerifyUserCharge(appname, apppass, user, chargeId) {
        return this.http.post(`http://www.fttserver.com:4217/api/AppVerifyUserCharge`, { applicationName: appname, applicationPassword: apppass, userName: user, chargeTokeId: chargeId });
    }
    appReturnCharge(appname, apppass, user, chargeId) {
        return this.http.post('http://www.fttserver.com:4217/api/AppReturnCharge', { applicationName: appname,
            applicationPassword: apppass,
            userName: user,
            chargeTokenId: chargeId });
    }
    appDeleteCharge(appname, apppass, user, chargeId) {
        return this.http.post(`http://www.fttserver.com:4217/api/AppDeleteCharge`, { applicationName: appname, applicationPassword: apppass, userName: user, chargeTokenId: chargeId });
    }
    appGetChargesByUser(appname, apppass, user) {
        return this.http.post('http://www.fttserver.com:4217/api/AppGetChargesByUser', { applicationName: appname,
            applicationPassword: apppass,
            userName: user });
    }
    appTrack2Authorization(appname, t2d, cvv, chip, amount, traceNumber, curr, plan) {
        return this.http.post(``, { applicationName: appname,
            track2Data: t2d,
            last4Digits: cvv,
            chipCardData: chip,
            transactionAmount: amount,
            systemTraceNumber: traceNumber,
            transactionCurrency: curr,
            quotePlan: plan });
    }
    appApplyDirectCharge(appname, apppass, descr, curr, amount, cardNumber, expMonth, expYear, cvv) {
        return this.http.post(`http://www.fttserver.com:4217/api/AppApplyDirectCharge`, { applicationName: appname,
            applicationPassword: apppass,
            chargeDescription: descr,
            transactionCurrency: curr,
            transactionAmount: amount,
            primaryAccountNumber: cardNumber,
            expirationMonth: expMonth,
            expirationYear: expYear,
            verificationValue: cvv });
    }
};
FtpaymentService.ctorParameters = () => [
    { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"] },
    { type: _crud_service__WEBPACK_IMPORTED_MODULE_3__["CrudService"] }
];
FtpaymentService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
        providedIn: 'root'
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"], _crud_service__WEBPACK_IMPORTED_MODULE_3__["CrudService"]])
], FtpaymentService);



/***/ }),

/***/ "./src/app/services/storage.service.ts":
/*!*********************************************!*\
  !*** ./src/app/services/storage.service.ts ***!
  \*********************************************/
/*! exports provided: StorageService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StorageService", function() { return StorageService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _capacitor_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @capacitor/core */ "./node_modules/@capacitor/core/dist/esm/index.js");



const { Storage } = _capacitor_core__WEBPACK_IMPORTED_MODULE_2__["Plugins"];
let StorageService = class StorageService {
    constructor() { }
    setObject(key, obj) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            yield Storage.set({
                key,
                value: JSON.stringify(obj)
            });
        });
    }
    getObject(key) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            const ret = yield Storage.get({ key });
            return JSON.parse(ret.value);
        });
    }
    setItem(key, item) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            yield Storage.set({
                key,
                value: item
            });
        });
    }
    getItem(item) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            return yield Storage.get({ key: item });
        });
    }
    removeItem(item) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            yield Storage.remove({ key: item });
        });
    }
    keys() {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            return yield Storage.keys();
        });
    }
    clear() {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function* () {
            yield Storage.clear();
        });
    }
};
StorageService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
        providedIn: 'root'
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [])
], StorageService);



/***/ })

}]);
//# sourceMappingURL=common-es2015.js.map